openapi: 3.0.1
info:
  description: 日向坂46を題材にしたサンプルAPI
  title: Hinatazaka API
  version: 1.0.0
servers:
- url: /
paths:
  /member/{id}:
    get:
      description: メンバーの情報を取得する
      operationId: get-member-id
      parameters:
      - description: ID of pet to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                dummy:
                  value:
                    id: 14
                    name: 小坂菜緒
                    age: 18
              schema:
                $ref: '#/components/schemas/Member'
          description: successful member response
      tags:
      - hinatazaka
    post:
      description: メンバーの情報を登録する
      operationId: post-member-id
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        "200":
          description: OK
      tags:
      - hinatazaka
  /discography/{id}:
    get:
      description: ディスコグラフィー情報を取得する
      operationId: get-discography-id
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                dummy:
                  value:
                    id: 1
                    title: キュン
                    type: single
              schema:
                $ref: '#/components/schemas/Discography'
          description: successful discography response
      summary: Your GET endpoint
      tags:
      - hinatazaka
components:
  schemas:
    Member:
      description: メンバー情報
      example:
        name: doggie
        id: 0
        age: 6.027456183070403
      properties:
        id:
          description: ID
          format: int64
          type: integer
        name:
          description: 名前
          example: doggie
          type: string
        age:
          description: 年齢
          enum:
          - null
          - null
          - null
          type: number
      title: Member
      type: object
    Discography:
      description: ディスコグラフィー情報
      example:
        center_id: 6.027456183070403
        id: 0.8008281904610115
        title: title
        type: type
      properties:
        id:
          description: ID
          type: number
        title:
          description: タイトル
          type: string
        type:
          description: 種別
          type: string
        center_id:
          description: センターのメンバーID
          type: number
      title: Discography
      type: object
